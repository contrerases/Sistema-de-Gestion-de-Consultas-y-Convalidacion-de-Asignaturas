name: sgc-dev

services:
  # ========================================
  # FRONTEND - Vue.js + Vite (DESARROLLO)
  # ========================================
  web:
    container_name: sgc_frontend_dev
    build:
      context: ./client
      dockerfile: Dockerfile.dev  # Dockerfile de desarrollo
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    depends_on:
      - api
    environment:
      - VITE_API_BASE_URL=${VITE_API_BASE_URL}
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true    
    restart: unless-stopped
    networks:
      - sgc_network
    volumes:
      - ./client:/app  # Hot reload para desarrollo
      - /app/node_modules  # Excluye node_modules para evitar conflictos

  # ========================================
  # BACKEND - Python + FastAPI (DESARROLLO)
  # ========================================
  api:
    container_name: sgc_backend_dev
    build:
      context: ./server
      dockerfile: Dockerfile.dev  # Dockerfile de desarrollo
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    depends_on:
      db:
        condition: service_healthy
    environment:
      # Database configuration
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_USER_PASSWORD=${DB_USER_PASSWORD}
      - DB_ROOT_PASSWORD=${DB_ROOT_PASSWORD}

      # Application settings
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
    restart: unless-stopped
    networks:
      - sgc_network
    healthcheck:
      test: [ "CMD", "python", "-c", "from database import get_db_connection; get_db_connection()" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    volumes:
      - ./server:/app  # Hot reload para desarrollo

  # ========================================
  # DATABASE - MariaDB
  # ========================================
  db:
    container_name: sgc_db_dev
    image: mariadb:10.11
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_USER_PASSWORD}
    ports:
      - "${DB_PORT}:3306"  # Solo se expone si DB_PORT está definido
    volumes:
      - sgc_db_data_dev:/var/lib/mysql  # Datos persistentes
      # Scripts de inicialización
      - ./database/00_init_database.sql:/docker-entrypoint-initdb.d/00_init_database.sql
      - ./database/01_structure.sql:/docker-entrypoint-initdb.d/01_structure.sql
      - ./database/02_initial_data.sql:/docker-entrypoint-initdb.d/02_initial_data.sql
      - ./database/03_procedures.sql:/docker-entrypoint-initdb.d/03_procedures.sql
    command: >-
      --character-set-server=utf8mb4 
      --collation-server=utf8mb4_unicode_ci 
      --default-authentication-plugin=mysql_native_password 
      --max-connections=500 
      --max_allowed_packet=128M
    networks:
      - sgc_network
    healthcheck:
      test: [ "CMD", "mariadb-admin", "ping", "-h", "localhost", "-u", "root", "--password=${DB_ROOT_PASSWORD}" ]
      interval: 10s
      timeout: 5s
      retries: 5

# ========================================
# NETWORKS
# ========================================
networks:
  sgc_network:
    name: sgc_network_dev
    driver: bridge

# ========================================
# VOLUMES
# ========================================
volumes:
  sgc_db_data_dev:
    driver: local 