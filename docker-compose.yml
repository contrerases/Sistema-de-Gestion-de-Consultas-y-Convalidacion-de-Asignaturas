
services:
  frontend:
    build:
      context: ./client
    ports:
      - "5173:5173"
    depends_on:
      - backend
    env_file:
      - ./client/.env
    restart: always
    networks:
      - sgc_network

  backend:
    build:
      context: ./server
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./server/.env
    restart: always
    networks:
      - sgc_network
    # Espera a que la base de datos esté lista
    healthcheck:
      test: ["CMD", "python", "-c", "from database import get_db_connection; get_db_connection()"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  db:
    image: mariadb:latest
    container_name: sgc_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_INITDB_SKIP_TZINFO: 1
    # No es necesario exponer el puerto 3306 al host, solo a la red interna
    expose:
      - "3306"
    volumes:
      - db_data:/var/lib/mysql
      # Montar todo el directorio database en el directorio de inicialización de MariaDB
      - ./database:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    command: >-
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --default-authentication-plugin=mysql_native_password
      --max-connections=500
      --max_allowed_packet=128M
    networks:
      - sgc_network

volumes:
  db_data:
    name: sgc_db_data
    driver: local

# Red personalizada para la comunicación entre contenedores
networks:
  sgc_network:
    driver: bridge
